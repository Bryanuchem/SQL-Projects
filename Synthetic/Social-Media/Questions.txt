1. How many total posts are in the dataset?
2. How many unique users posted?
3. What is the average number of likes, shares, and comments?
4. Which platform has the most posts?
5. What percentage of posts include media (images/videos)? (Hint: Use HasMedia = 1 to filter)
6. Which post had the highest engagement overall? (Use: Likes + Shares + Comments as total engagement)
7. Who are the top 3 most engaging users on average? (Average engagement per post = (Likes + Shares + Comments)/Posts)
8. Which platform has the highest average engagement per post?
9. Do posts with media perform better on average?
Compare average engagement for: HasMedia = 1, HasMedia = 0
10. What time of day sees the highest average engagement? (Hint: Extract hour from PostDate)
11. Which 5 posts had the highest share-to-like ratio? (Use: Shares / Likes, avoid divide-by-zero)
12. Which platform shows the highest average share rate? (Use: Shares / (Likes + Comments) per post)
13. Which users gained the most reach per post? (Use: UserFollowers / TotalPosts)
14. Which day of the week has the highest average engagement? (Use: Likes + Shares + Comments, group by DAYNAME)
15. Identify the most viral post: Highest combination of: High share-to-like ratio, High total engagement, Media included

Churn & Sentiment Modeling — SQL-Based Insight

1. Identify potentially disengaged users (i.e., churn risk):
Find users whose average engagement per post (likes + shares + comments) is in the bottom 20%.
2. Detect power users with strong consistency:
Users who post frequently (top 20% by post count) and have above-average engagement per post.
3. Estimate sentiment proxy:
Assign Low, Medium, or High satisfaction based on average engagement:
Below 40 → Low
40–70 → Medium
70+ → High
4. Which platform has the highest % of high-sentiment users?
5. Which hour of the day do low-sentiment users tend to post most?